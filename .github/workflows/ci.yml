name: CI

on:
    pull_request:
    push:
        branches:
            - main

concurrency:
    group: ci-${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

jobs:
    build_and_test_nix:
        name: Build and test
        timeout-minutes: 30
        runs-on: ${{ matrix.runner }}
        strategy:
            fail-fast: false
            matrix:
                name: [ubuntu-latest, macOS-arm-latest]
                rust: [stable]
                include:
                    - name: ubuntu-latest
                      os: ubuntu-latest
                      release-os: linux
                      release-arch: amd64
                      runner: [self-hosted, linux, X64]
                    - name: macOS-arm-latest
                      os: macOS-latest
                      release-os: darwin
                      release-arch: aarch64
                      runner: [self-hosted, macOS, ARM64]
        steps:
            - name: checkout
              uses: actions/checkout@v4

            - name: Install ${{ matrix.rust }} rust
              uses: dtolnay/rust-toolchain@master
              with:
                toolchain: ${{ matrix.rust }}
            - name: install cargo-nextest
              uses: taiki-e/install-action@v2
              with:
                tool: nextest
            - name: run tests
              run: |
                cargo nextest run --all-features --lib --bins --tests --no-fail-fast
              env:
                RUST_LOG: "TRACE"
            - name: build
              run: |
                cargo build --release

    build_and_test_windows:
        name: Build and test
        timeout-minutes: 30
        runs-on: ${{ matrix.runner }}
        strategy:
            fail-fast: false
            matrix:
                name: [windows-latest]
                rust: [stable]
                target:
                    - x86_64-pc-windows-gnu
                include:
                    - name: windows-latest
                      os: windows
                      runner: [self-hosted, windows, x64]
        steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Install ${{ matrix.rust }}
              run: |
                rustup toolchain install ${{ matrix.rust }}
                rustup toolchain default ${{ matrix.rust }}
                rustup target add ${{ matrix.target }}
                rustup set default-host ${{ matrix.target }}
            - name: Install cargo-nextest
              shell: powershell
              run: |
                $tmp = New-TemporaryFile | Rename-Item -NewName { $_ -replace 'tmp$', 'zip' } -PassThru
                Invoke-WebRequest -OutFile $tmp https://get.nexte.st/latest/windows
                $outputDir = if ($Env:CARGO_HOME) { Join-Path $Env:CARGO_HOME "bin" } else { "~/.cargo/bin" }
                $tmp | Expand-Archive -DestinationPath $outputDir -Force
                $tmp | Remove-Item
            - uses: msys2/setup-msys2@v2
            - name: run tests
              run: |
                cargo nextest run --all-features --lib --bins --tests --no-fail-fast
              env:
                RUST_LOG: "TRACE"
            - name: build
              run: |
                cargo build --release --target ${{ matrix.target }}

    cross:
        timeout-minutes: 30
        name: Cross compile
        runs-on: [self-hosted, linux, X64]
        strategy:
            fail-fast: false
            matrix:
              target:
                - i686-unknown-linux-gnu
                - armv7-linux-androideabi
                - aarch64-linux-android
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                submodules: recursive

            - name: Install rust stable
              uses: dtolnay/rust-toolchain@stable

            - name: Cleanup Docker
              continue-on-error: true
              run: |
                docker kill $(docker ps -q)

            - name: Install cross
              # See https://github.com/cross-rs/cross/issues/1222
              run: cargo install cross --git https://github.com/cross-rs/cross

            - name: build
              # cross tests are currently broken vor armv7 and aarch64
              # see https://github.com/cross-rs/cross/issues/1311.  So on
              # those platforms we only build but do not run tests.
              if: matrix.target != 'i686-unknown-linux-gnu'
              run: cross build --all --target ${{ matrix.target }}
              env:
                RUST_LOG: ${{ runner.debug && 'DEBUG' || 'INFO'}}

            - name: test
              # cross tests are currently broken for armv7 and aarch64
              # see https://github.com/cross-rs/cross/issues/1311
              if: matrix.target == 'i686-unknown-linux-gnu'
              run: cross test --all --target ${{ matrix.target }} -- --test-threads=12
              env:
                RUST_LOG: ${{ runner.debug && 'DEBUG' || 'INFO'}}

    cargo_deny:
        timeout-minutes: 30
        name: cargo deny
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: EmbarkStudios/cargo-deny-action@v1
              with:
                command: check advisories bans licenses sources

    check_fmt_and_docs:
        timeout-minutes: 30
        name: Checking fmt and docs
        runs-on: ubuntu-latest
        env:
            RUSTC_WRAPPER: "sccache"
            SCCACHE_GHA_ENABLED: "on"
        steps:
        - uses: actions/checkout@master

        - uses: dtolnay/rust-toolchain@stable
          with:
            components: rustfmt

        - name: Install sccache
          uses: mozilla-actions/sccache-action@v0.0.3

        - name: fmt
          run: cargo fmt --all -- --check

        - name: Docs
          run: cargo doc --workspace --all-features --no-deps --document-private-items

    clippy_check:
        timeout-minutes: 30
        runs-on: ubuntu-latest
        env:
            RUSTC_WRAPPER: "sccache"
            SCCACHE_GHA_ENABLED: "on"
        steps:
        - uses: actions/checkout@master
        - uses: dtolnay/rust-toolchain@stable
        - name: Install sccache
          uses: mozilla-actions/sccache-action@v0.0.3

        # TODO: We have a bunch of platform-dependent code so should
        #    probably run this job on the full platform matrix
        - name: clippy check (all features)
          run: cargo clippy --workspace --all-features --all-targets --bins --tests --benches

        - name: clippy check (no features)
          run: cargo clippy --workspace --no-default-features --lib --bins --tests

        - name: clippy check (default features)
          run: cargo clippy --workspace --all-targets
